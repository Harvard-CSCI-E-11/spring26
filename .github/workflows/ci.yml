name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: etc/e11-cli
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipx and Poetry
        run: |
          sudo apt -y update
          sudo apt -y install python3-venv pipx
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          pipx install poetry
          poetry --version

      - name: Configure Poetry (.venv in project)
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Sync deps
        run: poetry sync

      - name: e11 command tests with coverage
        run: poetry run make pytest

      - name: lambda-home tests with coverage
        run: |
          (cd lambda-home; make pytest)

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml,lambda-home/coverage.xml
          flags: unittests
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
