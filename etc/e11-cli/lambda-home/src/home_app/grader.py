"""
Remote grader

This code generated by ChatGPT o5
"""


import os

from e11.e11core.context import build_ctx
from e11.e11core.loader import discover_and_run
from e11.e11core.utils import smash_email

from .secrets import get_pkey_pem,CSCIE_BOT
from .common import add_user_log,User


def grade_student_vm(*,user:User, lab:str):
    """Run grading by SSHing into the student's VM and executing tests via shared runner."""

    add_user_log(None, user.user_id, 'Grading lab {lab} starts')

    smashed = smash_email(user.email)

    # Build context and mark grader mode
    os.environ["E11_MODE"] = "grader"
    ctx = build_ctx(lab)
    if smashed:
        ctx["smashedemail"] = smashed
    ctx["public_ip"] = user.public_ip  # ensure provided IP used
    ctx["pkey_pem"]  = get_pkey_pem(CSCIE_BOT) # makes it run remotely

    summary = discover_and_run(ctx)
    add_user_log(None, user.user_id, 'Grading lab {lab} ends')
    return summary


def create_email(summary):
    # Create email message for user
    subject = f"[E11] {summary['lab']} score {summary['score']}/5.0"
    body_lines = [subject, "", "Passes:"]
    body_lines += [f"  ✔ {n}" for n in summary["passes"]]
    if summary["fails"]:
        body_lines += ["", "Failures:"]
        for t in summary["tests"]:
            if t["status"] == "fail":
                body_lines += [f"✘ {t['name']}: {t.get('message','')}"]
                if t.get("context"):
                    body_lines += ["-- context --", (t["context"][:4000] or ""), ""]
    body = "\n".join(body_lines)
    return (subject,body)
