      Events:
        # Staging routes only
        StageAnyRoot:
          Type: HttpApi
          Properties:
            ApiId: !Ref StagingHttpApi
            Path: /
            Method: ANY
            PayloadFormatVersion: "2.0"
        StageAnyProxy:
          Type: HttpApi
          Properties:
            ApiId: !Ref StagingHttpApi
            Path: /{proxy+}
            Method: ANY
            PayloadFormatVersion: "2.0"

  # Sessions table holds the cookie sessions
  SessionsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BillingMode: PAY_PER_REQUEST
      TableName: !Sub "${AWS::StackName}-sessions"
      AttributeDefinitions:
        - AttributeName: sid
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: sid
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      GlobalSecondaryIndexes:
        - IndexName: GSI_Email
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL

Outputs:
  # Staging-specific outputs
  StagingApiId:
    Description: Staging HTTP API ID
    Value: !Ref StagingHttpApi
  StagingDomainUrl:
    Description: Staging base URL
    Value: "https://stage.csci-e-11.org/"
  # Common outputs
  HomeFunction:
    Description: Home Lambda function name
    Value: !Ref E11HomeFunction
  HostedZoneId:
    Description: Route53 Hosted Zone
    Value: !Ref HostedZoneId
  UsersTableIndexArn:
    Description: ARN for Users Table Index
    Value: !Sub "${SessionsTable.Arn}/index/*"
