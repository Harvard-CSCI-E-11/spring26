[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "e11"
version = "0.1.1"
description = "CSCI E-11 command for managing submissions to grader and AWS infrastructure"
authors = [{name = "Simson Garfinkel", email = "simsong@acm.org"}]
license = {text = "GPL"}
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "boto3>=1.39.14,<2.0.0",
    "requests>=2.32.4,<3.0.0",
    "dnspython>=2.7.0,<3.0.0",
    "paramiko>=4.0.0,<5.0.0",
    "email-validator>=2.2.0,<3.0.0",
    "itsdangerous>=2.2.0,<3.0.0",
    "pyjwt>=2.10.1,<3.0.0",
    "jinja2>=3.1.6,<4.0.0",
    "pydantic",
    "crossplane"
]

[project.optional-dependencies]
dev = [
   "pylint>=3.3.8",
   "pytest>=8.4.1,<9.0.0",
   "pytest-cov>=6.2.1,<7.0.0",
   "flask>=3.0.0,<4.0.0",
   "boto3-stubs[essential]",
   "types-requests",
   "pyright"
]

[project.scripts]
e11 = "e11.__main__:main"

[tool.pylint.main]
# Specify the Python version Pylint should assume for syntax checking.
py-version = "3.12"

[tool.pylint.messages_control]
# Disable specific messages by their symbolic name or message ID.
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "line-too-long",
    "unspecified-encoding"
]

[tool.pylint.design]
# Set the maximum number of arguments for a function.
max-args = 10

# Set the maximum number of public methods in a class.
max-public-methods = 20

[tool.setuptools.packages.find]
where = ["."]
include = ["e11*"]

[tool.pyright]
pythonVersion = "3.12"
venvPath = "./"
venv = ".venv"
include = ["."]
exclude = [
  "**/build",
  "**/.aws-sam",
  "**/.mypy_cache",
  "**/.pytest_cache",
  "**/__pycache__",
]
typeCheckingMode = "basic"
reportMissingTypeStubs = "warning"

[[tool.pyright.executionEnvironments]]
root = "."
extraPaths = ["e11"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = [
 "e11",
 "tests"
 ]
addopts = "-ra -q"
python_files = ["test_*.py"]
